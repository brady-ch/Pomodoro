{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brady\\\\Thinkful\\\\Pomodoro\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\button\\\\Button.js\";\nimport React from \"react\";\n\nfunction Button(props) {\n  const {\n    isIncrease,\n    isFocus,\n    times,\n    setTimes,\n    oioi\n  } = props;\n  const interval = isFocus ? times.focusInterval : times.breakInterval;\n  let dataTest = isFocus ? isIncrease ? \"increase-focus\" : \"decrease-focus\" : isIncrease ? \"increase-break\" : \"decrease-break\"; //   const clickHandler = () => {\n  //     isFocus\n  //       ? isIncrease\n  //         ? setTimes({\n  //             ...times,\n  //             focus: { current: focus.current + interval * 60 },\n  //           })\n  //         : setTimes({\n  //             ...times,\n  //             focus: { current: focus.current - interval * 60 },\n  //           })\n  //       : isIncrease\n  //       ? setTimes({\n  //           ...times,\n  //           breakTime: { current: breakTime.current + interval * 60 },\n  //         })\n  //       : setTimes({\n  //           ...times,\n  //           breakTime: { current: breakTime.current - interval * 60 },\n  //         });\n  //   };\n\n  const clickHandler = () => {\n    if (isFocus && isIncrease) {\n      setTimes({ ...times,\n        focusCurrent: times.focusCurrent + interval * 60\n      });\n    } else if (isFocus && !isIncrease) {\n      setTimes({ ...times,\n        focusCurrent: times.focusCurrent - interval * 60\n      });\n    } else if (!isFocus && isIncrease) {\n      setTimes({ ...times,\n        breakCurrent: times.breakCurrent + interval * 60\n      });\n    } else {\n      setTimes({ ...times,\n        breakCurrent: times.breakCurrent - interval * 60\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": dataTest,\n    onClick: clickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: oioi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/brady/Thinkful/Pomodoro/Project_Pomodoro_Timer_Qualified_1/src/button/Button.js"],"names":["React","Button","props","isIncrease","isFocus","times","setTimes","oioi","interval","focusInterval","breakInterval","dataTest","clickHandler","focusCurrent","breakCurrent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA,QAA9B;AAAwCC,IAAAA;AAAxC,MAAiDL,KAAvD;AACA,QAAMM,QAAQ,GAAGJ,OAAO,GAAGC,KAAK,CAACI,aAAT,GAAyBJ,KAAK,CAACK,aAAvD;AAEA,MAAIC,QAAQ,GAAGP,OAAO,GAClBD,UAAU,GACR,gBADQ,GAER,gBAHgB,GAIlBA,UAAU,GACV,gBADU,GAEV,gBANJ,CAJqB,CAYrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACzB,QAAIR,OAAO,IAAID,UAAf,EAA2B;AACzBG,MAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYQ,QAAAA,YAAY,EAAER,KAAK,CAACQ,YAAN,GAAqBL,QAAQ,GAAG;AAA1D,OAAD,CAAR;AACD,KAFD,MAEO,IAAIJ,OAAO,IAAI,CAACD,UAAhB,EAA4B;AACjCG,MAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPQ,QAAAA,YAAY,EAAER,KAAK,CAACQ,YAAN,GAAqBL,QAAQ,GAAG;AAFvC,OAAD,CAAR;AAID,KALM,MAKA,IAAI,CAACJ,OAAD,IAAYD,UAAhB,EAA4B;AACjCG,MAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPS,QAAAA,YAAY,EAAET,KAAK,CAACS,YAAN,GAAqBN,QAAQ,GAAG;AAFvC,OAAD,CAAR;AAID,KALM,MAKA;AACLF,MAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPS,QAAAA,YAAY,EAAET,KAAK,CAACS,YAAN,GAAqBN,QAAQ,GAAG;AAFvC,OAAD,CAAR;AAID;AACF,GAnBD;;AAqBA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAaG,QAHf;AAIE,IAAA,OAAO,EAAEC,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,SAAS,EAAEL,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AAED,eAAeN,MAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction Button(props) {\r\n  const { isIncrease, isFocus, times, setTimes, oioi } = props;\r\n  const interval = isFocus ? times.focusInterval : times.breakInterval;\r\n\r\n  let dataTest = isFocus\r\n    ? isIncrease\r\n      ? \"increase-focus\"\r\n      : \"decrease-focus\"\r\n    : isIncrease\r\n    ? \"increase-break\"\r\n    : \"decrease-break\";\r\n\r\n  //   const clickHandler = () => {\r\n  //     isFocus\r\n  //       ? isIncrease\r\n  //         ? setTimes({\r\n  //             ...times,\r\n  //             focus: { current: focus.current + interval * 60 },\r\n  //           })\r\n  //         : setTimes({\r\n  //             ...times,\r\n  //             focus: { current: focus.current - interval * 60 },\r\n  //           })\r\n  //       : isIncrease\r\n  //       ? setTimes({\r\n  //           ...times,\r\n  //           breakTime: { current: breakTime.current + interval * 60 },\r\n  //         })\r\n  //       : setTimes({\r\n  //           ...times,\r\n  //           breakTime: { current: breakTime.current - interval * 60 },\r\n  //         });\r\n  //   };\r\n\r\n  const clickHandler = () => {\r\n    if (isFocus && isIncrease) {\r\n      setTimes({ ...times, focusCurrent: times.focusCurrent + interval * 60 });\r\n    } else if (isFocus && !isIncrease) {\r\n      setTimes({\r\n        ...times,\r\n        focusCurrent: times.focusCurrent - interval * 60,\r\n      });\r\n    } else if (!isFocus && isIncrease) {\r\n      setTimes({\r\n        ...times,\r\n        breakCurrent: times.breakCurrent + interval * 60,\r\n      });\r\n    } else {\r\n      setTimes({\r\n        ...times,\r\n        breakCurrent: times.breakCurrent - interval * 60,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-secondary\"\r\n      data-testid={dataTest}\r\n      onClick={clickHandler}\r\n    >\r\n      <span className={oioi} />\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}