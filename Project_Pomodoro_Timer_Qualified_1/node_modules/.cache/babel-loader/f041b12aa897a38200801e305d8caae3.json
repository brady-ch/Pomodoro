{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brady\\\\Thinkful\\\\Pomodoro\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\button\\\\TimerController.js\";\nimport React from \"react\";\nimport classNames from \"../utils/class-names\";\n\nfunction TimerController(props) {\n  const {\n    hasStarted,\n    setTimes,\n    isTimerRunning,\n    playPause\n  } = props;\n  const toReset = {\n    // This is the variable to reset it to the default value when the times need to reset\n    focus: {\n      max: 60,\n      min: 5,\n      default: 25 * 60,\n      interval: 5,\n      current: 25 * 60\n    },\n    breakTime: {\n      max: 15,\n      min: 1,\n      default: 5 * 60,\n      interval: 1,\n      current: 5 * 60\n    },\n    hasStarted: false,\n    isFocusMode: true\n  };\n\n  const stopHandler = () => {\n    if (isTimerRunning) {\n      playPause();\n    }\n\n    setTimes({ ...toReset\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //returns the play, pause and stop buttons\n    React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group btn-group-lg mb-2\",\n      role: \"group\",\n      \"aria-label\": \"Timer controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      \"data-testid\": \"play-pause\",\n      title: \"Start or pause timer\",\n      onClick: playPause,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames({\n        oi: true,\n        \"oi-media-play\": !isTimerRunning,\n        \"oi-media-pause\": isTimerRunning\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      title: \"Stop the session\",\n      onClick: stopHandler,\n      disabled: hasStarted ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"oi oi-media-stop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    })))))\n  );\n}\n\nexport default TimerController;","map":{"version":3,"sources":["C:/Users/brady/Thinkful/Pomodoro/Project_Pomodoro_Timer_Qualified_1/src/button/TimerController.js"],"names":["React","classNames","TimerController","props","hasStarted","setTimes","isTimerRunning","playPause","toReset","focus","max","min","default","interval","current","breakTime","isFocusMode","stopHandler","oi"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,cAAxB;AAAwCC,IAAAA;AAAxC,MAAsDJ,KAA5D;AAEA,QAAMK,OAAO,GAAG;AACd;AACAC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,GAAG,EAAE,CAAhB;AAAmBC,MAAAA,OAAO,EAAE,KAAK,EAAjC;AAAqCC,MAAAA,QAAQ,EAAE,CAA/C;AAAkDC,MAAAA,OAAO,EAAE,KAAK;AAAhE,KAFO;AAGdC,IAAAA,SAAS,EAAE;AACTL,MAAAA,GAAG,EAAE,EADI;AAETC,MAAAA,GAAG,EAAE,CAFI;AAGTC,MAAAA,OAAO,EAAE,IAAI,EAHJ;AAITC,MAAAA,QAAQ,EAAE,CAJD;AAKTC,MAAAA,OAAO,EAAE,IAAI;AALJ,KAHG;AAUdV,IAAAA,UAAU,EAAE,KAVE;AAWdY,IAAAA,WAAW,EAAE;AAXC,GAAhB;;AAcA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIX,cAAJ,EAAoB;AAClBC,MAAAA,SAAS;AACV;;AACDF,IAAAA,QAAQ,CAAC,EAAE,GAAGG;AAAL,KAAD,CAAR;AACD,GALD;;AAOA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,6BADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,oBAAW,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,qBAAY,YAHd;AAIE,MAAA,KAAK,EAAC,sBAJR;AAKE,MAAA,OAAO,EAAED,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AACE,MAAA,SAAS,EAAEN,UAAU,CAAC;AACpBiB,QAAAA,EAAE,EAAE,IADgB;AAEpB,yBAAiB,CAACZ,cAFE;AAGpB,0BAAkBA;AAHE,OAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CALF,eAoBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,KAAK,EAAC,kBAHR;AAIE,MAAA,OAAO,EAAEW,WAJX;AAKE,MAAA,QAAQ,EAAEb,UAAU,GAAG,KAAH,GAAW,IALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CApBF,CADF,CADF;AAFF;AAqCD;;AAED,eAAeF,eAAf","sourcesContent":["import React from \"react\";\r\nimport classNames from \"../utils/class-names\";\r\n\r\nfunction TimerController(props) {\r\n  const { hasStarted, setTimes, isTimerRunning, playPause } = props;\r\n\r\n  const toReset = {\r\n    // This is the variable to reset it to the default value when the times need to reset\r\n    focus: { max: 60, min: 5, default: 25 * 60, interval: 5, current: 25 * 60 },\r\n    breakTime: {\r\n      max: 15,\r\n      min: 1,\r\n      default: 5 * 60,\r\n      interval: 1,\r\n      current: 5 * 60,\r\n    },\r\n    hasStarted: false,\r\n    isFocusMode: true,\r\n  };\r\n\r\n  const stopHandler = () => {\r\n    if (isTimerRunning) {\r\n      playPause();\r\n    }\r\n    setTimes({ ...toReset });\r\n  };\r\n\r\n  return (\r\n    //returns the play, pause and stop buttons\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <div\r\n          className=\"btn-group btn-group-lg mb-2\"\r\n          role=\"group\"\r\n          aria-label=\"Timer controls\"\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            data-testid=\"play-pause\"\r\n            title=\"Start or pause timer\"\r\n            onClick={playPause}\r\n          >\r\n            <span\r\n              className={classNames({\r\n                oi: true,\r\n                \"oi-media-play\": !isTimerRunning,\r\n                \"oi-media-pause\": isTimerRunning,\r\n              })}\r\n            />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            title=\"Stop the session\"\r\n            onClick={stopHandler}\r\n            disabled={hasStarted ? false : true}\r\n          >\r\n            <span className=\"oi oi-media-stop\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerController;\r\n"]},"metadata":{},"sourceType":"module"}