{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brady\\\\Thinkful\\\\Pomodoro\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport Button from \"../button/Button\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport TimerController from \"../button/TimerController\";\nimport Display from \"../display/Display\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [times, setTimes] = useState({\n    focus: {\n      max: 60,\n      min: 5,\n      default: 25 * 60,\n      interval: 5,\n      current: 25 * 60\n    },\n    breakTime: {\n      max: 15,\n      min: 1,\n      default: 5 * 60,\n      interval: 1,\n      current: 5 * 60\n    },\n    hasStarted: false,\n    isFocusMode: true\n  }); // This is what happens when the timer is running.\n\n  useInterval(() => {\n    if (times.focus.current < 1) {\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n      setTimes({ ...times,\n        focus: { ...times.focus,\n          current: times.focus.default\n        },\n        isFocusMode: false\n      });\n    } else if (times.breakTime.current < 1) {\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n      setTimes({ ...times,\n        breakTime: { ...times.breakTime,\n          current: times.breakTime.default\n        },\n        isFocusMode: true\n      });\n    } else if (times.isFocusMode) {\n      setTimes({ ...times,\n        focus: { ...times.focus,\n          current: times.focus.current - 1\n        }\n      });\n    } else if (!times.isFocusMode) {\n      setTimes({ ...times,\n        breakTime: { ...times.breakTime,\n          current: times.breakTime.current - 1\n        }\n      });\n    }\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    if (!times.hasStarted && !isTimerRunning) {\n      setTimes({ ...times,\n        hasStarted: true\n      });\n    }\n\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", secondsToDuration(times.focus.current)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    isFocus: true,\n    isIncrease: false,\n    oioi: \"oi oi-minus\",\n    times: times,\n    setTimes: setTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    isFocus: true,\n    isIncrease: true,\n    oioi: \"oi oi-plus\",\n    times: times,\n    setTimes: setTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", secondsToDuration(times.breakTime.current)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    isFocus: false,\n    isIncrease: false,\n    oioi: \"oi oi-minus\",\n    times: times,\n    setTimes: setTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    isFocus: false,\n    isIncrease: true,\n    oioi: \"oi oi-plus\",\n    times: times,\n    setTimes: setTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(TimerController, {\n    times: times,\n    isTimerRunning: isTimerRunning,\n    playPause: playPause,\n    hasStarted: times.hasStarted,\n    setTimes: setTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Display, {\n    times: times,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/brady/Thinkful/Pomodoro/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","Button","secondsToDuration","TimerController","Display","Pomodoro","isTimerRunning","setIsTimerRunning","times","setTimes","focus","max","min","default","interval","current","breakTime","hasStarted","isFocusMode","Audio","play","playPause","prevState"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport Button from \"../button/Button\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport TimerController from \"../button/TimerController\";\nimport Display from \"../display/Display\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [times, setTimes] = useState({\n    focus: { max: 60, min: 5, default: 25 * 60, interval: 5, current: 25 * 60 },\n    breakTime: {\n      max: 15,\n      min: 1,\n      default: 5 * 60,\n      interval: 1,\n      current: 5 * 60,\n    },\n    hasStarted: false,\n    isFocusMode: true,\n  });\n\n  // This is what happens when the timer is running.\n  useInterval(\n    () => {\n      if (times.focus.current < 1) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        setTimes({\n          ...times,\n          focus: { ...times.focus, current: times.focus.default },\n          isFocusMode: false,\n        });\n      } else if (times.breakTime.current < 1) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        setTimes({\n          ...times,\n          breakTime: { ...times.breakTime, current: times.breakTime.default },\n          isFocusMode: true,\n        });\n      } else if (times.isFocusMode) {\n        setTimes({\n          ...times,\n          focus: { ...times.focus, current: times.focus.current - 1 },\n        });\n      } else if (!times.isFocusMode) {\n        setTimes({\n          ...times,\n          breakTime: {\n            ...times.breakTime,\n            current: times.breakTime.current - 1,\n          },\n        });\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    if (!times.hasStarted && !isTimerRunning) {\n      setTimes({ ...times, hasStarted: true });\n    }\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {secondsToDuration(times.focus.current)}\n            </span>\n            <div className=\"input-group-append\">\n              <Button\n                isFocus={true}\n                isIncrease={false}\n                oioi={\"oi oi-minus\"}\n                times={times}\n                setTimes={setTimes}\n              />\n              <Button\n                isFocus={true}\n                isIncrease={true}\n                oioi={\"oi oi-plus\"}\n                times={times}\n                setTimes={setTimes}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {secondsToDuration(times.breakTime.current)}\n              </span>\n              <div className=\"input-group-append\">\n                <Button\n                  isFocus={false}\n                  isIncrease={false}\n                  oioi={\"oi oi-minus\"}\n                  times={times}\n                  setTimes={setTimes}\n                />\n                <Button\n                  isFocus={false}\n                  isIncrease={true}\n                  oioi={\"oi oi-plus\"}\n                  times={times}\n                  setTimes={setTimes}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <TimerController\n        times={times}\n        isTimerRunning={isTimerRunning}\n        playPause={playPause}\n        hasStarted={times.hasStarted}\n        setTimes={setTimes}\n      />\n      <Display times={times} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}